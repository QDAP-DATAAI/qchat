FROM node:alpine AS base

RUN apk --no-cache upgrade && \
  apk add --no-cache ca-certificates libc6-compat \
  && mkdir -p /etc/pki/ca-trust/source/anchors \
  && update-ca-certificates

WORKDIR /app

FROM base AS deps

COPY package.json package-lock.json* ./

RUN if [ -f package-lock.json ]; then \
  npm ci; \
  else \
  echo "Lockfile not found." && exit 1; \
  fi

FROM base AS builder
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

ARG APPLICATION_INSIGHTS
ARG BUILD_ID
ARG FEATURE_TRANSCRIBE_TENANTS
ARG GTAG
ARG SYSTEM_PROMPT

ENV AZURE_BUILD_ID=$BUILD_ID
ENV NEXT_PUBLIC_APPLICATIONINSIGHTS_CONNECTION_STRING=$APPLICATION_INSIGHTS
ENV NEXT_PUBLIC_FEATURE_TRANSCRIBE_TENANTS=$FEATURE_TRANSCRIBE_TENANTS
ENV NEXT_PUBLIC_GTAG=$GTAG
ENV NEXT_PUBLIC_SYSTEM_PROMPT=$SYSTEM_PROMPT
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED=1

RUN npm run build

FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs && \
  adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

COPY package.json package-lock.json* ./

USER nextjs

ENV PORT 443
ENV HOSTNAME 0.0.0.0

CMD ["node", "server.js"]
