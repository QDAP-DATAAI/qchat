import hljs from "highlight.js"
import { ClipboardIcon } from "lucide-react"
import { FC, memo } from "react"
import { Prism } from "react-syntax-highlighter"
import { atomDark } from "react-syntax-highlighter/dist/esm/styles/prism"

import { APP_NAME } from "@/app-global"

import { showError, showSuccess } from "@/features/globals/global-message-store"
import { Button } from "@/features/ui/button"

export const fence = {
  render: "CodeBlock",
  attributes: {
    language: {
      type: String,
    },
    value: {
      type: String,
    },
  },
}

interface Props {
  language: string
  children: string
}

const CodeBlock: FC<Props> = memo(({ language, children }): JSX.Element => {
  const handleCopy = async (): Promise<void> => {
    try {
      const detectedLanguage = hljs.highlightAuto(children).language || language
      let attribution = `${detectedLanguage} code generated by ${APP_NAME}`

      if (
        ["python", "ruby", "perl", "r", "bash", "shell", "powershell", "tcl", "awk", "nim"].includes(detectedLanguage)
      ) {
        attribution = `# ${detectedLanguage} code generated by ${APP_NAME}`
      } else if (
        [
          "javascript",
          "typescript",
          "c",
          "java",
          "c++",
          "c#",
          "php",
          "go",
          "swift",
          "kotlin",
          "rust",
          "scala",
          "dart",
          "groovy",
          "pascal",
          "verilog",
          "nextflow",
        ].includes(detectedLanguage)
      ) {
        attribution = `// ${detectedLanguage} code generated by ${APP_NAME}`
      } else if (detectedLanguage === "html") {
        attribution = `<!-- ${detectedLanguage} code generated by ${APP_NAME} -->`
      } else if (["sql", "lua", "haskell", "ada", "vhdl", "erlang", "prolog"].includes(detectedLanguage)) {
        attribution = `-- ${detectedLanguage} code generated by ${APP_NAME}`
      } else if (["matlab", "fortran", "cobol", "clojure", "lisp", "scheme", "assembly"].includes(detectedLanguage)) {
        attribution = `${detectedLanguage === "matlab" ? "%" : detectedLanguage === "fortran" ? "!" : detectedLanguage === "cobol" ? "*" : ";"} ${detectedLanguage} code generated by ${APP_NAME}`
      } else if (["ocaml", "f#", "sml", "ml"].includes(detectedLanguage)) {
        attribution = `(* ${detectedLanguage} code generated by ${APP_NAME} *)`
      } else if (detectedLanguage === "vba") {
        attribution = `' ${detectedLanguage} code generated by ${APP_NAME}`
      } else {
        attribution = `// ${detectedLanguage} code generated by ${APP_NAME}`
      }

      await navigator.clipboard.writeText(children + "\n" + attribution)
      showSuccess({ description: "Code copied." })
    } catch (err) {
      showError(`Failed to copy code: ${err}`)
    }
  }

  return (
    <div className="group relative z-20 size-full">
      <Prism language={language} style={atomDark} PreTag="pre">
        {children}
      </Prism>
      <Button
        onClick={handleCopy}
        className="absolute right-2 top-2 hidden h-7 gap-1 px-2 text-base capitalize focus:bg-accent focus:text-link group-hover:flex"
        title="Copy code"
      >
        <ClipboardIcon size={14} />
        Copy {language}
      </Button>
    </div>
  )
})

CodeBlock.displayName = "CodeBlock"

export default CodeBlock
