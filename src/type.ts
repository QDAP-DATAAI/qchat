const azureEnvVars = [
  "OPENAI_API_KEY",
  "AZURE_OPENAI_API_INSTANCE_NAME",
  "AZURE_OPENAI_API_DEPLOYMENT_NAME",
  "AZURE_OPENAI_API_VERSION",
  "AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME",
  "AZURE_COSMOSDB_URI",
  "AZURE_COSMOSDB_KEY",
  "AZURE_COSMOSDB_DB_NAME",
  "AZURE_COSMOSDB_CONTAINER_NAME",
  "AZURE_SEARCH_API_KEY",
  "AZURE_SEARCH_NAME",
  "AZURE_SEARCH_INDEX_NAME",
  "AZURE_SEARCH_API_VERSION",
  "AZURE_AD_CLIENT_ID",
  "AZURE_AD_CLIENT_SECRET",
  "AZURE_AD_TENANT_ID",
  "AZURE_AD_OPENID_CONFIGURATION",
  "AZURE_AD_AUTHORIZATION_ENDPOINT",
  "AZURE_AD_REDIRECT_URL",
  "AZURE_AD_TOKEN_ENDPOINT",
  "AZURE_AD_USERINFO_ENDPOINT",
  "NEXTAUTH_SECRET",
  "NEXTAUTH_URL",
  "NEXTAUTH_ALLOWED_ORIGINS",
  "AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT",
  "AZURE_DOCUMENT_INTELLIGENCE_KEY",
  "ADMIN_EMAIL_ADDRESS",
  "AZURE_SPEECH_REGION",
  "AZURE_SPEECH_KEY",
  "PUBLIC_PUBLIC_SPEECH_ENABLED",
  "NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING",
  "SYSTEM_PROMPT",
  "QGAIP_APIM_HEALTHCHECK_URI",
  "QGAIP_QCHAT_FQDN_URI",
  "QGAIP_QCHAT_APP_URI",
  "ADMIN_EMAIL_ADDRESS",
  "ACCESS_GROUPS",
  "ACCESS_GROUPS_REQUIRED",
  "FEATURE_FILEEXPORT",
  "FEATURE_QUASYMODO",
  "QGAIP_APIM_BASE",
  "AZURE_SPEECH_URL",
  "AZURE_SPEECH_STT_URL",
] as const;

type RequiredServerEnvKeys = (typeof azureEnvVars)[number];

declare global {
  namespace NodeJS {
    interface ProcessEnv extends Record<RequiredServerEnvKeys, string> {}
  }
}

export {};
